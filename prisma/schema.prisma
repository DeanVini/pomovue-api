generator client {
  provider      = "prisma-client-js"
  engineType    = "library"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        BigInt    @id @default(autoincrement())
  name      String    @db.VarChar(255)
  surname   String    @db.VarChar(255)
  username  String    @unique @db.VarChar(255)
  email     String    @unique @db.VarChar(255)
  password  String    @db.VarChar(255)
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime? @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  profiles  Profile[]
  tasks     Task[]

  @@index([email], map: "idx_users_email")
  @@index([username], map: "idx_users_username")
  @@map("users")
}

model Task {
  id         BigInt    @id @default(autoincrement())
  userId     BigInt?   @map("user_id")
  taskStored Json?     @default("[]") @map("task_stored")
  createdAt  DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt  DateTime? @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  user       User?     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([userId], map: "idx_tasks_user_id")
  @@map("tasks")
}

model Profile {
  id            BigInt    @id @default(autoincrement())
  userId        BigInt?   @map("user_id")
  lastProfile   Int?      @default(1) @map("last_profile")
  profileStored Json?     @default("[{\"id\": 1, \"name\": \"Default\", \"break\": 5, \"focusTime\": 25, \"longBreak\": 15}]") @map("profile_stored")
  createdAt     DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime? @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  user          User?     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([userId], map: "idx_profiles_user_id")
  @@map("profiles")
}
